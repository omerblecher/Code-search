@using System.Collections
@using System.Diagnostics.Eventing.Reader
@using PagedList.Mvc;
@model PagedList.IPagedList<CodeSearchDemo.Models.FileSearchModel> 
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link type="text/css" href="/~Content/ui.all.css" rel="stylesheet" />
<link href="~/Content/themes/base/minified/jquery-ui.min.css" rel="stylesheet" type="text/css" />
<script src="http://ajax.microsoft.com/ajax/jquery/jquery-1.4.2.js" type="text/javascript"></script>
<script src="http://ajax.microsoft.com/ajax/jquery.validate/1.7/jquery.validate.min.js" type="text/javascript"></script>

@{
    ViewBag.Title = "UMD Code search";
}

<!-- signalr library -->

<!-- autogenerated signalr hub script -->



    @section scripts {
        @Scripts.Render("~/bundles/signalR")
        <script src="../../Scripts/json2.min.js"></script>
        <script src="../../Scripts/jquery.signalR-2.0.2.min.js"></script>
        <script src="../../Scripts/jquery-ui-1.8.24.js"></script>
        <script src="/signalr/hubs"></script>
        <script>
            $(document).ready(function() {


                $("#progressbar").progressbar({ value: 0 });
                $("#progressbar").hide();
                $("#progressbar").css({ 'background': 'LightYellow' });
                $("#progressbar > div").css({ 'background': 'green' });

                // initialize the connection to the server
                var progressNotifier = $.connection.progressHub;

                // client-side sendMessage function that will be called from the server-side
                progressNotifier.client.sendMessage = function (message, count) {
                    // update progress
                    UpdateProgress(message, count);
                };

                // establish the connection to the server and start server-side operation
                $.connection.hub.start({ jsonp: true }).done(function () {

                    $('#connectionID').val($.connection.hub.id);

                    
                });
               
            });

            function UpdateProgress(message, count) {

                
                // get result div
                var result = $("#result");
                // set message
                result.html(message);

                if (!message || 0 == message.length) {
                    $("#progressbar").hide();
                } else {
                    
                    $("#progressbar").show();
                    // update progress bar
                    $("#progressbar").progressbar("value", count);
                }


                
            }
        </script>
    }

<script>
    function keypressHandler(e) {
        if (e.which == 13) {
            $(this).blur();
            $('#SearchButton').focus().click();//give your submit an ID
        }
    }

    $('#fileSearchForm').keypress(keypressHandler);
</script>

<script>
    function clear() {
        
        $('#searchResult').text("");
        if ($('#noResult').length > 0) {
            
            $('#noResult').text("");
        }
    }

</script>






<p>
    <img src= "@Url.Content("~/Images2/Search.jpg")" alt="IMAGES" style="width: 150px; height: 150px; display:block;float:right; margin-right: 30em ;background-color: green" />
</p>
<h2>Search for a class, property or method:</h2>

<p> 
   


            @using (Html.BeginForm("SearchInFiles", "FileSearch", FormMethod.Get, new {id = "fileSearchForm"}))
            {

                <p> <b>Text:</b> @Html.TextBox("token") 

                    <b>Branch:</b> @Html.DropDownList("branch", (SelectList) ViewBag.BranchesDropDownList, new {@class = "dropdown"})  
            

                    <b>Layer:</b> @Html.DropDownList("layer", new List<SelectListItem>
                                  {
                                      new SelectListItem {Text = "All", Value = ""},
                                      new SelectListItem {Text = "Access", Value = "Access"},
                                      new SelectListItem {Text = "CCFlow", Value = "CCFlow"},
                                      new SelectListItem {Text = "Core", Value = "Core"},
                                      new SelectListItem {Text = "Delivery", Value = "Delivery"},
                                      new SelectListItem {Text = "NRG", Value = "NRG"},
                                      new SelectListItem {Text = "Targeting", Value = "Targeting"}

                                  },
                                      new {@class = "dropdown"})  
             
                    @Html.Hidden("connectionID", "firstID")
                    <input type="submit" name="SearchButton" id="submitID" value="Go" onclick="clear();" />
           
           
            
                </p>
                <p>
                    @Html.ValidationMessage("Error")
                </p>
                <div id="result" style="font-family: Tahoma; font-size: 2em; color: black; margin-top: 10px; padding-bottom: 5px"></div>

                <div id="progressbar" style="width: 600px; height: 30px;"></div>

                <br />

            }
 
    
    <div id="searchResult" style="font-family: Tahoma; font-size: 0.9em; color: blue; margin-top: 1px; padding-bottom: 3px">@ViewBag.SearchMessage</div>   
    @Html.PagedListPager((PagedList.IPagedList)Model, page => Url.Action("SearchInFiles",
    new { token = ViewBag.Currenttoken, branch = ViewBag.Currentbranch, layer = ViewBag.Currentlayer, connectionID = ViewBag.CurrentconnectionID, page = page }))
    
    @if (Model.Count == 0 && !string.IsNullOrEmpty(ViewBag.Currenttoken))
    {
        <div id="noResult" style="font-family: Tahoma; font-size: 2em; color: red; margin-top: 10px; padding-bottom: 5px">No results have been found for "@ViewBag.Currenttoken"</div>
    }

    @foreach (var item in Model)
            {

             <table>
                 <tr style="text-align: left; width: 1500px">
                     
                     @Html.ActionLink(item.FileNameForDisplay, "DisplayFile", new {fileName = item.FileName, rowNumbersStr = string.Join(",", item.RowNumbers.ToArray()), branch = item.Branch}, "FileSearch")

                 </tr>
                 
                 @foreach (var line in item.Lines)
                 {
                     <tr style="background-color: #FFFF66; text-align: left; width: 1500px">
                         <td class="col1">
                             @Html.DisplayFor(modelItem => line)
                         </td>
                     </tr>
                 }
                 
                 
             </table>

            }
            <br />



            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager((PagedList.IPagedList)Model, page => Url.Action("SearchInFiles",
    new { token = ViewBag.Currenttoken, branch = ViewBag.Currentbranch, layer = ViewBag.Currentlayer, connectionID = ViewBag.CurrentconnectionID, page = page }))
</p>
